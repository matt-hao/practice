<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--dubbo configuration-->
    <dubbo:application name="stock-provider"/>
    <dubbo:registry address="zookeeper://127.0.0.1:2181" check="false" file="false"/>
    <dubbo:protocol name="dubbo" port="20881"/>
    <dubbo:service interface="com.st.api.StockService" version="1.0.0" ref="stockService"
                   timeout="1000000"/>

    <!--tcc redis configuration-->
    <!--<bean id="transactionRepository" class="org.mengyun.tcctransaction.repository.RedisTransactionRepository">-->
    <!--<property name="keyPrefix" value="TCC:STOCK:"/>-->
    <!--<property name="jedisPool" ref="jedisPool"/>-->
    <!--</bean>-->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxTotal" value="1000"/>-->
    <!--<property name="maxWaitMillis" value="1000"/>-->
    <!--</bean>-->
    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool">-->
    <!--<constructor-arg index="0" ref="jedisPoolConfig"/>-->
    <!--<constructor-arg index="1" value="192.168.2.109"/>-->
    <!--<constructor-arg index="2" value="6379" type="int"/>-->
    <!--<constructor-arg index="3" value="1000" type="int"/>-->
    <!--<constructor-arg index="4" type="java.lang.String">-->
    <!--<null/>-->
    <!--</constructor-arg>-->
    <!--<constructor-arg index="5" value="0" type="int"/>-->
    <!--</bean>-->

    <!--tcc db configuration-->
    <bean id="transactionRepository"
          class="org.mengyun.tcctransaction.spring.repository.SpringJdbcTransactionRepository">
        <property name="dataSource" ref="dataSource"/>
        <property name="tbSuffix" value="_STOCK"/>
        <property name="domain" value="STOCK"/>
    </bean>

    <!--spring basic configuration-->
    <!--add aop,make the aspect work,especial for TccCompensableAspect and TccTransactionContextAspect-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="com.st.stock"/>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="false"/>
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" scope="singleton">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.jdbcURL}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan">
            <list>
                <value>com.st.stock.domain</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <jpa:repositories base-package="com.st.stock.dao" entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"/>
</beans>